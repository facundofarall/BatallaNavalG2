**********************************
* definicion de macro utilizados *
**********************************
* invocar a la subrutina writepos
	MACRO	%WRITEPOS
		ldab		\0
		pshb				;se envía el byte a escribir
		ldab		12,x
		pshb				;se envía letra (fila)
		ldab		11,x
		pshb				;se envía num (columna)
		ldy		9,x
		pshy				;se envía dirección de inicio de matriz
		ldab		8,x
		pshb				;se envía jugador atacado
		jsr		writepos
		%CLRST		6
	ENDMAC

* invocar a la subrutina writepos
	MACRO	%PLAY_WRT
		ldab		12,x
		pshb				;se envía letra (fila)
		ldab		11,x
		pshb				;se envía num (columna)
		ldy		14,x
		pshy				;se envía inicio de array
		ldab		8,x
		pshb				;se envía jugador atacado
		jsr		play_wrt
		%CLRST		5
	ENDMAC

* realizar back up de AccA, AccB, IX e IY
	MACRO	%BACKUP
		psha
		pshb
		pshx
		pshy
	ENDMAC

* realizar restore de AccA, AccB, IX e IY
	MACRO	%RESTORE
		puly
		pulx
		pulb
		pula
	ENDMAC

* limpiar el stack de datos enviados
	MACRO	%CLRST
CONT		set	\0
		IF CONT > 0
		ins
		%CLRST	CONT-1
		ENDIF
	ENDMAC
* activar un led en funcion de una variable
	MACRO	%LED_INV
		ldaa		PORTA
		eora		#SHF_LED
		staa		PORTA
	ENDMAC

* declarar o reservar variables locales en subrutinas
	MACRO	%MALLOC
		IF \0 > 0
		tsx
		xgdx
		subd	#\0
		xgdx
		txs
		ENDIF
	ENDMAC

* liberar espacio de variables en subrutinas
	MACRO	%RELMEM
		IF \0 > 0
		tsx
		xgdx
		addd	#\0
		xgdx
		txs
		ENDIF		
	ENDMAC
